(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    108312,       2179]
NotebookOptionsPosition[    105475,       2127]
NotebookOutlinePosition[    105913,       2144]
CellTagsIndexPosition[    105870,       2141]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"r_", ",", "z_", ",", "t_", ",", "v_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"-", "v"}], " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"z", "-", 
      RowBox[{"v", " ", "t"}]}], ")"}], "/", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"z", "-", 
          RowBox[{"v", " ", "t"}]}], ")"}], "^", "2"}], " ", "+", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"v", "^", "2"}]}], ")"}], 
        RowBox[{"r", "^", "2"}]}]}], " ", ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"3", "/", "2"}], ")"}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F", "[", 
   RowBox[{"r_", ",", "z_", ",", "t_", ",", "v_"}], "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"r", ",", "z", ",", "t", ",", "v"}], "]"}], ",", 
       RowBox[{"t", ">=", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"r", "^", "2"}], " ", "+", " ", 
          RowBox[{"z", "^", "2"}]}], "]"}]}]}], "}"}], "}"}], ",", "0"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8596250604972677`*^9, 3.859625256597061*^9}, {
   3.859625296534546*^9, 3.85962529809226*^9}, {3.8596417153470707`*^9, 
   3.859641851329796*^9}, {3.859641899734787*^9, 3.859641903295846*^9}, {
   3.8596419926895847`*^9, 3.859642036337079*^9}, {3.859642082473604*^9, 
   3.85964215041571*^9}, {3.859642296001581*^9, 3.859642301371237*^9}, {
   3.859642338870891*^9, 3.8596423619632874`*^9}, {3.8596425079992037`*^9, 
   3.859642510569628*^9}, {3.859642541098609*^9, 3.8596425473931828`*^9}, {
   3.859642603279052*^9, 3.8596426126650057`*^9}, {3.8596428833603697`*^9, 
   3.8596429326230297`*^9}, {3.859643131281189*^9, 3.859643163332272*^9}, {
   3.859643332909101*^9, 3.859643334243791*^9}, {3.8596433989285727`*^9, 
   3.859643408506612*^9}, {3.859643554270265*^9, 3.859643555188717*^9}, {
   3.859643677669635*^9, 3.859643690768303*^9}, 3.85964448775168*^9, 
   3.859647858948587*^9, 3.859648016326577*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"f6cdf50a-ba43-4836-bd0a-75f14c38c845"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"r_", ",", "z_", ",", "t_", ",", "v_", ",", "M_"}], "]"}], ":=", 
   RowBox[{"1", "-", 
    RowBox[{"2", "/", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"Exp", "[", 
        RowBox[{"M", "*", 
         RowBox[{"f", "[", 
          RowBox[{"r", ",", "z", ",", "t", ",", "v"}], "]"}]}], "]"}]}], 
      ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", 
    RowBox[{"r_", ",", "z_", ",", "t_", ",", "v_", ",", "N_", ",", "M_"}], 
    "]"}], ":=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"g", "[", 
         RowBox[{"r", ",", "z", ",", "t", ",", "v", ",", "M"}], "]"}], ",", 
        RowBox[{"t", ">=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"r", "^", "2"}], " ", "+", " ", 
           RowBox[{"z", "^", "2"}]}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"g", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"t", "-", "0.1"}], ")"}], " ", 
            RowBox[{"r", "/", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"r", "^", "2"}], "+", 
               RowBox[{"z", "^", "2"}]}], "]"}]}]}], " ", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"t", "-", "0.1"}], ")"}], 
            RowBox[{"z", "/", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"r", "^", "2"}], "+", 
               RowBox[{"z", "^", "2"}]}], "]"}]}]}], ",", "t", ",", "v", ",", 
           "M"}], "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"Exp", "[", 
            RowBox[{"N", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"r", "^", "2"}], "+", 
                 RowBox[{"z", "^", "2"}]}], "]"}], "-", "t", "-", "1"}], 
              ")"}]}], "]"}]}], ")"}]}], ",", 
        RowBox[{"t", "<", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"r", "^", "2"}], "+", 
           RowBox[{"z", "^", "2"}]}], "]"}]}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", "1.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pp", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e", "[", 
   RowBox[{"x_", ",", "a_"}], "]"}], ":=", 
  RowBox[{"Exp", "[", 
   RowBox[{"a", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Abs", "[", "x", "]"}], "-", "1"}], ")"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"plot", " ", "=", 
  RowBox[{"DensityPlot3D", "[", 
   RowBox[{
    RowBox[{"G", "[", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"x", "^", "2"}], "+", 
        RowBox[{"y", "^", "2"}]}], "]"}], ",", "z", ",", "t", ",", "v", ",", 
      "4", ",", "2"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "L"}], ",", "L"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "L"}], ",", "L"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", 
      RowBox[{
       RowBox[{"-", "0.1"}], "L"}], ",", 
      RowBox[{"1.9", "L"}]}], "}"}], ",", 
    RowBox[{"PlotTheme", "->", "\"\<Thermal\>\""}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"Background", "\[Rule]", "None"}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", "pp"}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "z", "}"}], ",", 
       RowBox[{
        RowBox[{"ColorData", "[", "\"\<TemperatureMap\>\"", "]"}], "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"z", "+", "1"}], ")"}], "/", "2"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
    RowBox[{"OpacityFunctionScaling", "\[Rule]", "False"}], ",", 
    RowBox[{"OpacityFunction", "\[Rule]", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "z", "}"}], ",", 
       RowBox[{"e", "[", 
        RowBox[{"z", ",", "5"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1.3`", ",", 
       RowBox[{"-", "2.4`"}], ",", "2.`"}], "}"}]}], ",", 
    RowBox[{"Boxed", "->", "False"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8596253824577723`*^9, 3.859625390638042*^9}, {
   3.859625440188696*^9, 3.859625601229334*^9}, {3.859635019999621*^9, 
   3.859635104444137*^9}, 3.859635208346323*^9, {3.8596353590280123`*^9, 
   3.85963535926542*^9}, {3.8596354439235973`*^9, 3.859635491071575*^9}, {
   3.859635544910966*^9, 3.8596356660788*^9}, {3.859635715788548*^9, 
   3.859635778647998*^9}, {3.859635872072715*^9, 3.859635898625996*^9}, {
   3.859635975167017*^9, 3.859636059296774*^9}, {3.859636089948735*^9, 
   3.859636105216939*^9}, {3.859636138274337*^9, 3.859636325190322*^9}, {
   3.859636381798156*^9, 3.8596364341894693`*^9}, {3.859636471677527*^9, 
   3.859636745920287*^9}, {3.859636817286963*^9, 3.859636931629922*^9}, {
   3.8596369681098633`*^9, 3.8596370751064653`*^9}, {3.859637183084133*^9, 
   3.859637184633482*^9}, {3.859637256059099*^9, 3.859637411572064*^9}, {
   3.8596376607409554`*^9, 3.8596378038534803`*^9}, {3.85963783548779*^9, 
   3.859638047677746*^9}, {3.859638255740179*^9, 3.859638308345275*^9}, {
   3.8596383843614798`*^9, 3.859638391144702*^9}, {3.859638423208806*^9, 
   3.85963857842078*^9}, {3.8596386105266113`*^9, 3.8596386265591707`*^9}, {
   3.859638904338831*^9, 3.859638923974683*^9}, {3.8596391183184347`*^9, 
   3.859639248387904*^9}, {3.859639686202023*^9, 3.859639692358368*^9}, {
   3.859639744779276*^9, 3.8596397838822517`*^9}, {3.859642154287366*^9, 
   3.85964217754377*^9}, {3.8596423145495033`*^9, 3.859642316312655*^9}, {
   3.859642370745331*^9, 3.859642382138192*^9}, {3.859642668475459*^9, 
   3.859642690009509*^9}, {3.859642746891078*^9, 3.859642749656289*^9}, {
   3.8596429083622932`*^9, 3.859642913990245*^9}, {3.859643255654499*^9, 
   3.859643258955708*^9}, {3.859643355221354*^9, 3.8596433565728493`*^9}, {
   3.8596436934716177`*^9, 3.859643741636259*^9}, {3.8596437871473293`*^9, 
   3.859643903093823*^9}, {3.8596439809049273`*^9, 3.859644103302494*^9}, {
   3.859644255817212*^9, 3.8596442910731087`*^9}, {3.859644323979292*^9, 
   3.859644425952879*^9}, {3.8596444672509747`*^9, 3.859644478196267*^9}, {
   3.8596445372007933`*^9, 3.8596445740798693`*^9}, {3.859644608752705*^9, 
   3.85964464850922*^9}, {3.8596446802090397`*^9, 3.859644718287714*^9}, {
   3.8596447563762503`*^9, 3.859644783173888*^9}, {3.859644854600333*^9, 
   3.859644881362516*^9}, {3.859644957888479*^9, 3.859644998846656*^9}, {
   3.859645057979786*^9, 3.859645236969254*^9}, {3.859645597842477*^9, 
   3.859645652161036*^9}, {3.8596456984821053`*^9, 3.85964570470268*^9}, {
   3.859645776653528*^9, 3.8596457820882673`*^9}, {3.859645814529192*^9, 
   3.8596460590837193`*^9}, {3.85964610082155*^9, 3.85964612255766*^9}, {
   3.85964636691005*^9, 3.859646457374346*^9}, {3.859646551711191*^9, 
   3.859646551907216*^9}, {3.859646589535713*^9, 3.8596466187475243`*^9}, {
   3.859647954776963*^9, 3.859647955492078*^9}, {3.8596490454817467`*^9, 
   3.8596490549607*^9}, {3.859649966951974*^9, 3.859649989914707*^9}, {
   3.859650422673318*^9, 3.8596504319986258`*^9}, {3.859650676297337*^9, 
   3.85965072694952*^9}, {3.859650758290143*^9, 3.8596507699666357`*^9}, {
   3.859650810087462*^9, 3.8596509049276323`*^9}, {3.859650949634138*^9, 
   3.859651045568926*^9}, {3.859651080014192*^9, 3.859651218609828*^9}, {
   3.859651285032784*^9, 3.859651310170632*^9}, {3.8597135203608847`*^9, 
   3.8597135349820423`*^9}, 3.85971361305935*^9, {3.859714027481956*^9, 
   3.859714029173183*^9}, {3.8597141139534893`*^9, 3.859714114110306*^9}, {
   3.85971427730516*^9, 3.859714277970469*^9}, 3.859714372772324*^9, {
   3.859884451747993*^9, 3.859884457232551*^9}, {3.859884497209055*^9, 
   3.859884498152013*^9}, {3.8598887166510973`*^9, 3.8598887225318604`*^9}, 
   3.860860083256895*^9, {3.884054672406212*^9, 3.884054719884974*^9}, {
   3.884055298803931*^9, 3.884055317698167*^9}, {3.884055400008728*^9, 
   3.884055419257482*^9}, {3.8840559688442163`*^9, 3.8840559734508953`*^9}, {
   3.884056177719513*^9, 3.8840562412968683`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"f478f510-d79a-4e4e-92a9-76a9232c3eac"],

Cell[BoxData[
 Graphics3DBox[{Raster3DBox[CompressedData["
1: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
/HTfX93Ph+7zRff5rPvzTff7ge73K93vp7rf75ONDnBin+lLnLjiQUgKE6Ov
Tapm4rJjIxeZ8UtPdg1MKfHIm4/nZJdYIrT43oYSE/qE/ThfYo6nHcIveSB2
/IiDB1500CUPNa/B5Tb5m3j0XrkBJmZrlKZyMg9e9PLVOhzaXvbLL0tH3N2T
3BCxc1p0WRNoiMkHhuYYk8FG7PgRBw+86KBLHmq9+Hz5wi7n/CRO/rZDefPn
YQsTK7ReL/dlYvqaR+b4G+KrF5/5/l5A/nnIef/l8jl20n/1pbh7huhbNDTV
jUYON2LHzx1n8cCLDrrkoe4j68Cf9VIPdK5+OTu+9TmHmPxxcHTeltdFZLrU
E5f0vymK779R4fcW8W7Ejh9x8MDr1rF0yUPtL+rtXpcVn9L/SvnUUYYYfXzS
j6tbx7n1M6ZtHDxJ3BLz9vn6Fh4fL5a2G+C98ulNN2LHjzh44EUHXfJQ+56+
oP6sE77pHbP1G/ok3q37xR9G1TbbbogJ19YOyfw8TjxvVXVevhuxbsSOH3Hw
wIsOuuShnkfqTJ+wH6wb/tO1F94aeeWGiKgRkyOuYqyY8rD0yW4DHSJv81LN
f6lkI3b8iIMHXnTQJQ91TnDO3P1h9Q37Qx3QI48ro9cXf/e2IcI7nn947ISN
2PEjDh540UGXPNT5xTzg3NHfrJf9oi7oT2pbIfbHrfK+0ydH1h3LbMSOH3Hw
wIsOuuShzlX6lPlA/el3+op6UCfyuTFk19nDM2zEjh9x8MCLDrrkoc57XfPT
fX91Px+6zxfd57Puzzfd7we63690v5/qfr/vL99OTPxgZkYnloj40Ym756/3
M3H/ijS5TEzXtsdME1f/a9sLk7fXleJpzP1oElF/nPn3Xf5YKLIGeiB2/IiD
B1500CUPNa9qa3y9TRz5ebFUzt9jC0zT2DMf9Cbu7zwst8m3McirjcSYgZee
bpSYevDa/c88EDt+xMEDLzrokodaLz4/XeHrXiaOzVh5o/k+OjyX70Pz3z0O
SHPh5giJ5/f3rWTIvm60qt6r5H7yOfFo4u65st+LJSs0q3SgjdjxIw4eeNFB
lzzUfWQd+LNe6oFOwYDWUzOlN0RyY1qKTsUM4VvvZpmjjQ3xqHTxunt62ogd
P+LggRcddMlD7S/qzbqIn7Ep4/LH8vy1XLzVd1IuW//i0WX7pj4wxNMbe31q
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
    "], {{-10., -10., -1.}, {10., 10., 19.}},
    ColorFunction->(If[# >= 0.5, 
      Opacity[
       Function[{$CellContext`z}, 
        $CellContext`e[$CellContext`z, 5]][-0.9999990460636504 + 
        1.9999980921273008` #], 
       Blend[{{5.523183601583972*^-23, 
          RGBColor[0.984192, 0.987731, 0.911643]}, {0.009999990460636505, 
          RGBColor[
          0.9848573993652507, 0.9880061597375149, 0.9006156105194377]}, {
         0.01999998092127301, 
          RGBColor[
          0.9855227987305014, 0.9882813194750297, 0.8895882210388755]}, {
         0.02999997138190951, 
          RGBColor[
          0.9861881980957522, 0.9885564792125446, 0.8785608315583131]}, {
         0.03999996184254602, 
          RGBColor[
          0.986853597461003, 0.9888316389500595, 0.8675334420777508]}, {
         0.04999995230318252, 
          RGBColor[
          0.9875189968262538, 0.9891067986875743, 0.8565060525971886]}, {
         0.05999994276381902, 
          RGBColor[
          0.9881843961915044, 0.9893819584250892, 0.8454786631166263]}, {
         0.06999993322445554, 
          RGBColor[
          0.9888497955567552, 0.9896571181626042, 0.8344512736360639]}, {
         0.07999992368509204, 
          RGBColor[
          0.989515194922006, 0.9899322779001191, 0.8234238841555015]}, {
         0.08999991414572854, 
          RGBColor[
          0.9901805942872568, 0.9902074376376339, 0.8123964946749392]}, {
         0.09999990460636504, 
          RGBColor[
          0.9908459936525075, 0.9904825973751488, 0.801369105194377]}, {
         0.10999989506700154`, 
          RGBColor[
          0.9915113930177583, 0.9907577571126637, 0.7903417157138147]}, {
         0.11999988552763804`, 
          RGBColor[
          0.992176792383009, 0.9910329168501785, 0.7793143262332525]}, {
         0.12999987598827456`, 
          RGBColor[
          0.9928421917482598, 0.9913080765876934, 0.7682869367526901]}, {
         0.13999986644891108`, 
          RGBColor[
          0.9935075911135105, 0.9915832363252083, 0.7572595472721279]}, {
         0.14999985690954756`, 
          RGBColor[
          0.9941729904787613, 0.9918583960627231, 0.7462321577915656]}, {
         0.15999984737018408`, 
          RGBColor[
          0.9948383898440121, 0.992133555800238, 0.7352047683110033]}, {
         0.1699998378308206, 
          RGBColor[
          0.9952264227040089, 0.9921981257836017, 0.7218037543146816]}, {
         0.17999982829145708`, 
          RGBColor[
          0.9950596828630682, 0.9918414861238135, 0.7036551516273098]}, {
         0.18999981875209357`, 
          RGBColor[
          0.9948929430221276, 0.9914848464640253, 0.6855065489399382]}, {
         0.19999980921273008`, 
          RGBColor[
          0.994726203181187, 0.9911282068042372, 0.6673579462525661]}, {
         0.20999979967336657`, 
          RGBColor[
          0.9945594633402463, 0.990771567144449, 0.6492093435651949]}, {
         0.2199997901340031, 
          RGBColor[
          0.9943927234993056, 0.990414927484661, 0.6310607408778228]}, {
         0.2299997805946396, 
          RGBColor[
          0.994225983658365, 0.9900582878248728, 0.6129121381904511]}, {
         0.2399997710552761, 
          RGBColor[
          0.9940592438174244, 0.9897016481650847, 0.5947635355030794]}, {
         0.2499997615159126, 
          RGBColor[
          0.9938925039764837, 0.9893450085052965, 0.5766149328157077]}, {
         0.2599997519765491, 
          RGBColor[
          0.993725764135543, 0.9889883688455083, 0.5584663301283361]}, {
         0.2699997424371856, 
          RGBColor[
          0.9935590242946024, 0.9886317291857203, 0.5403177274409644]}, {
         0.27999973289782215`, 
          RGBColor[
          0.9933922844536617, 0.9882750895259321, 0.5221691247535927]}, {
         0.2899997233584586, 
          RGBColor[
          0.9932255446127211, 0.987918449866144, 0.504020522066221]}, {
         0.2999997138190951, 
          RGBColor[
          0.9930588047717804, 0.9875618102063558, 0.4858719193788494]}, {
         0.3099997042797316, 
          RGBColor[
          0.9928920649308398, 0.9872051705465676, 0.4677233166914777]}, {
         0.31999969474036816`, 
          RGBColor[
          0.9927253250898991, 0.9868485308867796, 0.44957471400410604`]}, {
         0.32999968520100464`, 
          RGBColor[
          0.9925585852489585, 0.9864918912269914, 0.431426111316734]}, {
         0.3399996756616412, 
          RGBColor[
          0.9910414711079418, 0.9814429198637845, 0.4196982362409261]}, {
         0.3499996661222777, 
          RGBColor[
          0.9888490731993519, 0.9740474469186018, 0.41118118436565926`]}, {
         0.35999965658291416`, 
          RGBColor[
          0.9866566752907618, 0.966651973973419, 0.4026641324903924]}, {
         0.36999964704355065`, 
          RGBColor[
          0.9844642773821719, 0.9592565010282361, 0.39414708061512554`]}, {
         0.37999963750418714`, 
          RGBColor[
          0.982271879473582, 0.9518610280830534, 0.3856300287398587]}, {
         0.3899996279648237, 
          RGBColor[
          0.980079481564992, 0.9444655551378706, 0.37711297686459183`]}, {
         0.39999961842546017`, 
          RGBColor[
          0.9778870836564021, 0.9370700821926877, 0.368595924989325]}, {
         0.4099996088860967, 
          RGBColor[
          0.9756946857478122, 0.929674609247505, 0.3600788731140581]}, {
         0.41999959934673314`, 
          RGBColor[
          0.9735022878392222, 0.9222791363023222, 0.35156182123879126`]}, {
         0.4299995898073697, 
          RGBColor[
          0.9713098899306323, 0.9148836633571393, 0.3430447693635244]}, {
         0.4399995802680062, 
          RGBColor[
          0.9691174920220423, 0.9074881904119566, 0.33452771748825755`]}, {
         0.4499995707286427, 
          RGBColor[
          0.9669250941134524, 0.9000927174667738, 0.3260106656129907]}, {
         0.4599995611892792, 
          RGBColor[
          0.9647326962048625, 0.8926972445215908, 0.3174936137377236]}, {
         0.46999955164991575`, 
          RGBColor[
          0.9625402982962725, 0.885301771576408, 0.30897656186245676`]}, {
         0.4799995421105522, 
          RGBColor[
          0.9603479003876825, 0.8779062986312253, 0.3004595099871899]}, {
         0.4899995325711887, 
          RGBColor[
          0.9581555024790925, 0.8705108256860424, 0.2919424581119231]}, {
         0.4999995230318252, 
          RGBColor[
          0.9559631045705026, 0.8631153527408597, 0.28342540623665624`]}, {
         0.5099995134924618, 
          RGBColor[
          0.952858991019724, 0.8508086387428813, 0.2809274415140148]}, {
         0.5199995039530982, 
          RGBColor[
          0.9497548339808951, 0.8385016904829378, 0.27842976389664253`]}, {
         0.5299994944137347, 
          RGBColor[
          0.9466506769420662, 0.8261947422229943, 0.2759320862792703]}, {
         0.5399994848743712, 
          RGBColor[
          0.9435465199032372, 0.8138877939630509, 0.27343440866189805`]}, {
         0.5499994753350078, 
          RGBColor[
          0.9404423628644082, 0.8015808457031071, 0.27093673104452576`]}, {
         0.5599994657956443, 
          RGBColor[
          0.9373382058255794, 0.7892738974431639, 0.2684390534271535]}, {
         0.5699994562562808, 
          RGBColor[
          0.9342340487867503, 0.7769669491832202, 0.2659413758097812]}, {
         0.5799994467169172, 
          RGBColor[
          0.9311298917479215, 0.7646600009232769, 0.26344369819240904`]}, {
         0.5899994371775538, 
          RGBColor[
          0.9280257347090924, 0.7523530526633332, 0.26094602057503674`]}, {
         0.5999994276381903, 
          RGBColor[
          0.9249215776702636, 0.7400461044033899, 0.25844834295766456`]}, {
         0.6099994180988267, 
          RGBColor[
          0.9218174206314346, 0.7277391561434462, 0.2559506653402922]}, {
         0.6199994085594632, 
          RGBColor[
          0.9187132635926057, 0.715432207883503, 0.25345298772292]}, {
         0.6299993990200997, 
          RGBColor[
          0.9156091065537767, 0.7031252596235593, 0.2509553101055477]}, {
         0.6399993894807363, 
          RGBColor[
          0.9125049495149478, 0.6908183113636158, 0.24845763248817548`]}, {
         0.6499993799413728, 
          RGBColor[
          0.9094007924761188, 0.6785113631036723, 0.24595995487080322`]}, {
         0.6599993704020093, 
          RGBColor[
          0.9062966354372899, 0.6662044148437288, 0.24346227725343098`]}, {
         0.6699993608626458, 
          RGBColor[
          0.9033107357193111, 0.6538384579003513, 0.24103244662450046`]}, {
         0.6799993513232824, 
          RGBColor[
          0.9005614183419873, 0.6413544498093116, 0.2387383488129258]}, {
         0.6899993417839189, 
          RGBColor[
          0.8978121009646637, 0.6288704417182723, 0.23644425100135122`]}, {
         0.6999993322445554, 
          RGBColor[
          0.8950627835873399, 0.6163864336272326, 0.23415015318977656`]}, {
         0.7099993227051917, 
          RGBColor[
          0.8923134662100163, 0.6039024255361933, 0.23185605537820198`]}, {
         0.7199993131658283, 
          RGBColor[
          0.8895641488326924, 0.5914184174451534, 0.2295619575666273]}, {
         0.7299993036264648, 
          RGBColor[
          0.8868148314553688, 0.5789344093541142, 0.22726785975505273`]}, {
         0.7399992940871013, 
          RGBColor[
          0.884065514078045, 0.5664504012630744, 0.22497376194347807`]}, {
         0.7499992845477378, 
          RGBColor[
          0.8813161967007214, 0.5539663931720352, 0.2226796641319035]}, {
         0.7599992750083743, 
          RGBColor[
          0.8785668793233976, 0.5414823850809953, 0.22038556632032882`]}, {
         0.7699992654690109, 
          RGBColor[
          0.8758175619460739, 0.5289983769899559, 0.21809146850875422`]}, {
         0.7799992559296474, 
          RGBColor[
          0.8730682445687502, 0.5165143688989163, 0.21579737069717958`]}, {
         0.7899992463902838, 
          RGBColor[
          0.8703189271914265, 0.5040303608078768, 0.21350327288560497`]}, {
         0.7999992368509203, 
          RGBColor[
          0.8675696098141027, 0.49154635271683733`, 0.21120917507403036`]}, {
         0.8099992273115569, 
          RGBColor[
          0.8648202924367789, 0.4790623446257975, 0.20891507726245567`]}, {
         0.8199992177721934, 
          RGBColor[
          0.8620709750594553, 0.4665783365347582, 0.20662097945088112`]}, {
         0.8299992082328299, 
          RGBColor[
          0.8593216576821315, 0.45409432844371844`, 0.20432688163930646`]}, {
         0.8399991986934663, 
          RGBColor[
          0.8567617575348814, 0.43730131833965913`, 0.20198842915962556`]}, {
         0.8499991891541029, 
          RGBColor[
          0.8542965998864871, 0.4183530364151309, 0.1996277914115258]}, {
         0.8599991796147394, 
          RGBColor[
          0.8518314422380929, 0.3994047544906035, 0.19726715366342618`]}, {
         0.8699991700753759, 
          RGBColor[
          0.8493662845896985, 0.38045647256607523`, 0.19490651591532643`]}, {
         0.8799991605360123, 
          RGBColor[
          0.8469011269413044, 0.3615081906415478, 0.1925458781672268]}, {
         0.8899991509966488, 
          RGBColor[
          0.8444359692929101, 0.3425599087170196, 0.19018524041912704`]}, {
         0.8999991414572854, 
          RGBColor[
          0.8419708116445158, 0.3236116267924918, 0.18782460267102735`]}, {
         0.9099991319179219, 
          RGBColor[
          0.8395056539961215, 0.3046633448679639, 0.18546396492292766`]}, {
         0.9199991223785584, 
          RGBColor[
          0.8370404963477273, 0.28571506294343607`, 0.18310332717482797`]}, {
         0.9299991128391949, 
          RGBColor[
          0.834575338699333, 0.26676678101890827`, 0.18074268942672828`]}, {
         0.9399991032998315, 
          RGBColor[
          0.8321101810509387, 0.24781849909438003`, 0.17838205167862856`]}, {
         0.949999093760468, 
          RGBColor[
          0.8296450234025445, 0.22887021716985262`, 0.17602141393052892`]}, {
         0.9599990842211044, 
          RGBColor[
          0.8271798657541503, 0.2099219352453248, 0.17366077618242923`]}, {
         0.9699990746817408, 
          RGBColor[
          0.824714708105756, 0.19097365332079697`, 0.17130013843432954`]}, {
         0.9799990651423774, 
          RGBColor[
          0.8222495504573617, 0.17202537139626872`, 0.1689395006862298]}, {
         0.9899990556030139, 
          RGBColor[
          0.8197843928089674, 0.1530770894717413, 0.16657886293813015`]}, {
         0.9999990460636504, 
          RGBColor[
          0.8173192351605731, 0.13412880754721307`, 
           0.1642182251900304]}}, -0.9999990460636504 + 
        1.9999980921273008` #]], 
      RGBColor[0, 0, 0, 0]]& ),
    Method->{
     "InterpolateValues" -> True, "FastRendering" -> True, "SampleLayers" -> 
      Automatic},
    VertexDataCoordinates->{{0, 0, 0}, {1, 1, 1}}], {}},
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 1},
  Boxed->False,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{354.00042653613616`, 319.1874741765502},
  ImageSizeRaw->Automatic,
  PlotRange->{{-10, 10}, {-10, 10}, {-1., 19.}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-1.7093375711321148`, 2.872663943526163, 0.5253255519017539},
  ViewVertical->{-0.07781987503938465, 0.49126745074731065`, 
   0.8675254226160138}]], "Output",
 CellChangeTimes->{
  3.859714137717024*^9, 3.859714282236771*^9, 3.85971455427909*^9, 
   3.8598175780940943`*^9, 3.859883176332822*^9, 3.859884460932253*^9, 
   3.859884501475629*^9, 3.8598889042230177`*^9, 3.860860085160627*^9, {
   3.884054512835432*^9, 3.884054515370289*^9}, 3.884055047221653*^9, {
   3.884055304783342*^9, 3.884055332682905*^9}, {3.884055422265512*^9, 
   3.884055423661961*^9}},
 CellLabel->"Out[75]=",ExpressionUUID->"9a0c4768-db36-4876-81f0-f3185be3492d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plot_data", " ", "=", " ", 
   RowBox[{"Reverse", "[", 
    RowBox[{
     RowBox[{"plot", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ImageMesh", "[", 
  RowBox[{"Image3D", "[", "plot_data", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.884056082511384*^9, 3.884056150585593*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"2a6a7060-f93d-44bd-b8e6-a9e102cfe5c7"],

Cell[BoxData[
 TemplateBox[{
  "Image3D", "imgarray", 
   "\"The specified argument \\!\\(\\*RowBox[{\\\"plot_data\\\"}]\\) should \
be an array of rank 3 or 4 with machine-sized numbers or a list of images of \
consistent dimension and color space.\"", 2, 94, 29, 34597093489326664425, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.884056144916335*^9, 3.884056150952351*^9}},
 CellLabel->
  "During evaluation of \
In[93]:=",ExpressionUUID->"3d12eb8b-da8d-41d2-92ce-5efbc1ed9d8c"],

Cell[BoxData[
 TemplateBox[{
  "ImageMesh", "imginv", 
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"Image3D\\\", \\\"[\\\", \\\"plot_data\\\", \
\\\"]\\\"}]\\).\"", 2, 94, 30, 34597093489326664425, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.884056144916335*^9, 3.884056150961143*^9}},
 CellLabel->
  "During evaluation of \
In[93]:=",ExpressionUUID->"5adfa540-84e1-4b52-8989-2e44020f2127"],

Cell[BoxData[
 RowBox[{"ImageMesh", "[", 
  RowBox[{"Image3D", "[", "plot_data", "]"}], "]"}]], "Output",
 CellChangeTimes->{{3.884056097948124*^9, 3.884056150968523*^9}},
 CellLabel->"Out[94]=",ExpressionUUID->"03d51ea6-1429-4ef9-81fa-5714eb6deaaf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/panos/Desktop/Untitled.dxf\>\"", ",", "plot", ",", 
   "\"\<DXF\>\""}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[87]:=",ExpressionUUID->"448c50a8-7121-4b7a-aa25-a314ad20ee71"],

Cell[BoxData[
 TemplateBox[{
  "Export", "nodta", 
   "\"\\!\\(\\*RowBox[{\\\"Graphics3D\\\"}]\\) contains no data that can be \
exported to the \\!\\(\\*RowBox[{\\\"\\\\\\\"DXF\\\\\\\"\\\"}]\\) format.\"", 
   2, 87, 26, 34597093489326664425, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.88405580192247*^9},
 CellLabel->
  "During evaluation of \
In[87]:=",ExpressionUUID->"0bf74eef-f568-4bff-8d6b-8fd83fd63bcf"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.884055802077841*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"73a496b6-5f06-4af8-9ff9-cc11a3a9a90e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/panos/Desktop/Untitled.3ds\>\"", ",", "plot", ",", 
   "\"\<3DS\>\""}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[86]:=",ExpressionUUID->"a11238a3-cfd2-48d7-ba33-5d0569a03550"],

Cell[BoxData[
 TemplateBox[{
  "Export", "nodta", 
   "\"\\!\\(\\*RowBox[{\\\"Graphics3D\\\"}]\\) contains no data that can be \
exported to the \\!\\(\\*RowBox[{\\\"\\\\\\\"3DS\\\\\\\"\\\"}]\\) format.\"", 
   2, 86, 25, 34597093489326664425, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8840557761225863`*^9},
 CellLabel->
  "During evaluation of \
In[86]:=",ExpressionUUID->"ef2439fb-8d96-473d-b6ec-16368909851b"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.8840557761341887`*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"5b94b9fd-5358-4fa6-9bb1-df2616e901af"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.884055765685813*^9},ExpressionUUID->"ec7cd9b3-02f8-4fb6-b21f-\
08e79268157f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Printout3D", "[", 
  RowBox[{"plot", ",", "\"\<test.obj\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.884054943910969*^9, 3.884054945841489*^9}, {
  3.8840550397288017`*^9, 3.884055039973576*^9}, {3.884055492310705*^9, 
  3.884055553011901*^9}},
 NumberMarks->False,
 CellLabel->"In[82]:=",ExpressionUUID->"5ccefb6b-c8c4-454b-9307-557c32031d1e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|"Status" -> "Failed", "Report" -> Grid[{{
           Graphics[{
             Hue[0, 1, 0.8], 
             Disk[{0, 0}], 
             GrayLevel[1], 
             CapForm["Round"], 
             JoinForm["Round"], 
             Thickness[0.12], 
             Line[{{-0.4, 0.4}, {0.4, -0.4}}], 
             Line[{{-0.4, -0.4}, {0.4, 0.4}}]}, 
            ImageSize -> {Automatic, 8.267999999999999 Dynamic[2]}], 
           "Discretization"}, {
           Graphics[{
             Hue[0.3, 1, 0.6], 
             Disk[{0, 0}], 
             GrayLevel[1], 
             CapForm["Round"], 
             JoinForm["Round"], 
             Thickness[0.12], 
             Line[{{-0.525, -0.05}, {-0.175, -0.4}, {0.45, 0.45}}]}, 
            ImageSize -> {Automatic, 8.267999999999999 Dynamic[2]}], 
           "Rescaling"}, {
           Graphics[{
             Hue[0, 1, 0.8], 
             Disk[{0, 0}], 
             GrayLevel[1], 
             CapForm["Round"], 
             JoinForm["Round"], 
             Thickness[0.12], 
             Line[{{-0.4, 0.4}, {0.4, -0.4}}], 
             Line[{{-0.4, -0.4}, {0.4, 0.4}}]}, 
            ImageSize -> {Automatic, 8.267999999999999 Dynamic[2]}], 
           "Export"}}, Alignment -> {Left, Center}]|>, "AllowEmbedding" -> 
     True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"Status"} -> 
        TypeSystem`PackageScope`AtomShape[67.2], {"Report"} -> 
        TypeSystem`PackageScope`UnknownShape[False]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{"Status", "Report"}, {
        TypeSystem`Atom[String], TypeSystem`AnyType}], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`AtomShape[10], "Type" -> TypeSystem`AnyType, 
     "Path" -> {
       Key["Report"]}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 
     10, "DataRowCount" -> 2, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {
     Key["Report"]}, TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Grid[{{
                  Graphics[{
                    Hue[0, 1, 0.8], 
                    Disk[{0, 0}], 
                    GrayLevel[1], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    Thickness[0.12], 
                    Line[{{-0.4, 0.4}, {0.4, -0.4}}], 
                    Line[{{-0.4, -0.4}, {0.4, 0.4}}]}, 
                   ImageSize -> {Automatic, 8.267999999999999 Dynamic[2]}], 
                  "Discretization"}, {
                  Graphics[{
                    Hue[0.3, 1, 0.6], 
                    Disk[{0, 0}], 
                    GrayLevel[1], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    Thickness[0.12], 
                    Line[{{-0.525, -0.05}, {-0.175, -0.4}, {0.45, 0.45}}]}, 
                   ImageSize -> {Automatic, 8.267999999999999 Dynamic[2]}], 
                  "Rescaling"}, {
                  Graphics[{
                    Hue[0, 1, 0.8], 
                    Disk[{0, 0}], 
                    GrayLevel[1], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    Thickness[0.12], 
                    Line[{{-0.4, 0.4}, {0.4, -0.4}}], 
                    Line[{{-0.4, -0.4}, {0.4, 0.4}}]}, 
                   ImageSize -> {Automatic, 8.267999999999999 Dynamic[2]}], 
                  "Export"}}, Alignment -> {Left, Center}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Report"]}, "Item", False], "Mouse"], 
              ImageSize -> {{10, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{114., {54.634033203125, 60.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{114., {54.634033203125, 60.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.884055441395874*^9, {3.8840555110028048`*^9, 3.884055556086606*^9}},
 CellLabel->"Out[82]=",ExpressionUUID->"8ac52c93-8eac-4b67-b7c6-cc5ef3a06a37"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"frame", "[", 
    RowBox[{"t_", ",", "pp_"}], "]"}], ":=", 
   RowBox[{"DensityPlot3D", "[", 
    RowBox[{
     RowBox[{"G", "[", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"x", "^", "2"}], "+", 
         RowBox[{"y", "^", "2"}]}], "]"}], ",", "z", ",", "t", ",", "v", ",", 
       "4", ",", "1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "L"}], ",", "L"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "L"}], ",", "L"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{
        RowBox[{"-", "0.1"}], "L"}], ",", 
       RowBox[{"1.9", "L"}]}], "}"}], ",", 
     RowBox[{"PlotTheme", "->", "\"\<Ther Spemal\>\""}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"Background", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "pp"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "z", "}"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<TemperatureMap\>\"", "]"}], "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"z", "+", "1"}], ")"}], "/", "2"}], "]"}]}], "]"}]}], ",", 
     
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"OpacityFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"OpacityFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "z", "}"}], ",", 
        RowBox[{"e", "[", 
         RowBox[{"z", ",", "5"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"ViewPoint", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1.3`", ",", 
        RowBox[{"-", "2.4`"}], ",", "2.`"}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"m", " ", "=", 
    RowBox[{"Animate", "[", 
     RowBox[{
      RowBox[{"frame", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0.01", ",", "20", ",", "0.1"}], "}"}]}], "]"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.859646565547266*^9, 3.859646584217215*^9}, {
  3.8596466425186367`*^9, 3.859646694663611*^9}, {3.859646742434836*^9, 
  3.859646744579269*^9}, {3.8596475273648577`*^9, 3.859647528201103*^9}, {
  3.8596477004847593`*^9, 3.859647732978869*^9}, {3.859648717381662*^9, 
  3.859648771899171*^9}, {3.859648912375079*^9, 3.859648918029361*^9}, {
  3.8596501556812363`*^9, 
  3.85965015668696*^9}},ExpressionUUID->"c32004ba-2d7b-4450-a6bb-\
44de52866eb6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ProgressIndicator", "[", 
  RowBox[{
   RowBox[{"Dynamic", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.01", ",", "20"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"frames", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"n", "=", "t"}], ";", 
       RowBox[{"frame", "[", 
        RowBox[{"t", ",", "100"}], "]"}]}], ")"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0.01", ",", "20", ",", "0.5"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.859647743656261*^9, 3.8596477658132057`*^9}, {
  3.859647798841413*^9, 3.859647803170431*^9}, {3.859648412698794*^9, 
  3.859648412953607*^9}, {3.859648532947439*^9, 3.859648549285708*^9}, {
  3.859648619668089*^9, 3.8596486238355*^9}, {3.8596486859652853`*^9, 
  3.859648689723469*^9}, {3.8596489275182133`*^9, 3.85964892793918*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"91cf6fc6-d548-4613-b7aa-df7b7b7cd967"],

Cell[BoxData[
 ProgressIndicatorBox[Dynamic[$CellContext`n], {0.01, 20}]], "Output",
 CellChangeTimes->{3.8596486250671883`*^9, 3.8596486920318403`*^9, 
  3.8596487759294853`*^9, 3.859648928568714*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"7aaf6f1d-3ca7-4d08-a099-08c72f451235"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\</Users/panos/Desktop/mid_res_fast.mp4\>\"", ",", "frames"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8596467595222692`*^9, 3.859646783166327*^9}, {
   3.8596472960503283`*^9, 3.859647334543501*^9}, {3.859647817287156*^9, 
   3.859647818354473*^9}, {3.859648802177641*^9, 3.859648803183516*^9}, 
   3.859648855361408*^9},
 CellLabel->
  "In[135]:=",ExpressionUUID->"222ec687-b0f3-4e56-b950-2864b9bb8b2d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"hexToRGB", "=", 
    RowBox[{
     RowBox[{"RGBColor", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"IntegerDigits", "[", 
         RowBox[{
          RowBox[{
          "#", "~", "StringDrop", "~", "1", "~", "FromDigits", "~", "16"}], 
          ",", "256", ",", "3"}], "]"}], "/", "255."}], ")"}]}], "&"}]}], 
   ";"}], "\n"}]], "Input",
 CellChangeTimes->{{3.860864744146511*^9, 3.8608647546239243`*^9}},
 NumberMarks->False,
 CellLabel->
  "In[444]:=",ExpressionUUID->"22674070-853f-40b7-9f2d-4d8cb0997229"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", " ", "=", " ", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"{", 
    RowBox[{"0.25", ",", "0.5", ",", "0.75"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Colors", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<#6096BA\>\"", ",", "\"\<#274C77\>\"", ",", "\"\<#112634\>\""}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LS", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Dashing", "[", 
      RowBox[{"r", ",", 
       RowBox[{"0.01", "-", "r"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"{", 
        RowBox[{"0.003", ",", "0.002", ",", "0.0001"}], "}"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plots", " ", "=", " ", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"F", "[", 
          RowBox[{"r", ",", 
           RowBox[{"z", "+", 
            RowBox[{"#1", " ", "t"}]}], ",", "t", ",", "#1"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", 
          RowBox[{"-", "L"}], ",", 
          RowBox[{"+", "L"}]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"hexToRGB", "[", "#2", "]"}], ",", "#3"}], "}"}]}]}], 
       "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"v", ",", "Colors", ",", "LS"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"Plots", ",", 
   RowBox[{"PlotPoints", "\[Rule]", "31"}], ",", 
   RowBox[{"MaxRecursion", "\[Rule]", "8"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<z-vt\>\"", ",", "\"\<Pressure\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"AxesStyle", "->", 
    RowBox[{"Arrowheads", "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.015"}], "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"GridLines", "\[Rule]", "None"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.860860149967857*^9, 3.860860185398015*^9}, {
   3.860860421541089*^9, 3.860860458861095*^9}, {3.860860497659751*^9, 
   3.860860565266836*^9}, {3.8608606034011927`*^9, 3.860860699692792*^9}, {
   3.860860752045104*^9, 3.8608608093237143`*^9}, {3.8608608574632053`*^9, 
   3.860860890908296*^9}, {3.8608609309113293`*^9, 3.860860994810781*^9}, {
   3.8608615263969812`*^9, 3.860861533860709*^9}, {3.8608615736776857`*^9, 
   3.860861582592618*^9}, {3.860861703797249*^9, 3.8608618110500402`*^9}, {
   3.8608627465498466`*^9, 3.860862767801032*^9}, {3.8608629062837973`*^9, 
   3.860862955878873*^9}, {3.860863043889377*^9, 3.8608630516888523`*^9}, {
   3.860863135578504*^9, 3.860863135835888*^9}, {3.860863427668357*^9, 
   3.860863491355172*^9}, {3.860863529667379*^9, 3.8608635298478537`*^9}, {
   3.8608635788958282`*^9, 3.860863631697878*^9}, {3.860863784685142*^9, 
   3.860863803868556*^9}, {3.860863860945786*^9, 3.86086390731292*^9}, {
   3.8608639558763113`*^9, 3.860863958458548*^9}, {3.860863992378594*^9, 
   3.860863995454749*^9}, {3.860864761168545*^9, 3.860864858259947*^9}, {
   3.860864979681674*^9, 3.8608650299782333`*^9}, {3.860865067424417*^9, 
   3.860865100880163*^9}, {3.860865134013255*^9, 3.8608651404470587`*^9}, {
   3.860865173059668*^9, 3.860865333594874*^9}, {3.860865418237982*^9, 
   3.860865483978778*^9}, 3.860865520138406*^9, {3.860865567976756*^9, 
   3.86086557082644*^9}, {3.86086560667026*^9, 3.860865682731016*^9}, {
   3.8608661259804564`*^9, 3.860866139832796*^9}, {3.860866246747797*^9, 
   3.860866247007921*^9}, {3.8608663844997168`*^9, 3.8608664195690813`*^9}, {
   3.860866765717589*^9, 3.86086679399621*^9}},
 CellLabel->
  "In[1154]:=",ExpressionUUID->"5a57d927-1df3-40f8-a5c2-c49e02c030e9"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.3764705882352941, 0.5882352941176471, 0.7294117647058823], 
       AbsoluteThickness[1.6], Opacity[1.], Dashing[0.003, 0.007], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$104345#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.15294117647058825`, 0.2980392156862745, 0.4666666666666667],
        AbsoluteThickness[1.6], Opacity[1.], Dashing[0.002, 0.008], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$104391#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[
       0.06666666666666667, 0.14901960784313725`, 0.20392156862745098`], 
       AbsoluteThickness[1.6], Opacity[1.], Dashing[0.0001, 0.0099], 
       LineBox[CompressedData["
1:eJwtmXk01d/Xx80zySVTJA2kVChJsu83RYOESFGZJWmSRIZUQqVCpRIyFBEy
hST7k3me59m9n2sqMpPx8Vvr+eus1zpnn/PeZ++z11lrb7S6bmjLwsTENMTM
xPS/0XPg5MTKCoXQ9psm9EbDsd993XTHIoUILctXcJsNRz3BntmsfxQi9++J
X3FMESiz/8bS9UkKISAe5bWWEoH5T4K5evsphJabwn1RtQjk2tkiTVRRCJma
YNrfBxH4ytnihPd7CnFX2d2alPyAX5hvfWTaRyFsioe+5ShGIrutjrL4BSGC
7cAJjdCEKKS0FjlGB60liuu3zmyEGDQsCLXeVi5IaL4b0RZi+YTufw86BtLX
ELbSVlrdKnGYfSfU4espAUK2x1xDPjge9YKNZZbf8RHbJoeyVQITUSf8p97R
PzzETb2AY8xsKTj2rHORrZ+HmPh4MpGPNwVDvRYSfvXwEK/MHMPXC6XgH/P9
nAcaeAixrC3qx2VSMFj2Gyrm8BBXFTaWd2qkYHdc4m6KPw9xSvpgJs0lBV3S
3gt1b+IhklOYtj0fTcHYErfmW2bcxI1nxw8Yj6TiO2UXrXgjbsJU3nLy7Ewq
BoQ7pXSf5CYC1MQNrFdS0enWlSfHqNwEc8T4uoC1aXhwwwXNDVu4CVdub++d
qmnY6EKNLR/lIsZojY9yvdOQZSuny8YHXIRbg3/5Dsl0vOjzSqTmMyfh2Cat
MW2XgdUww+kazUlkhAtLydzMQFgwmZcJ4yS+dvXYGLpnoIyTZI/TC06CV7vv
cNWLDKSZR39e58JJhHlk8kp9z0C7AykHLmpxEm/VHOYU+L/htYkKy5EuDsKn
CWT3/PiGXhasybwUDmJr9psXWbuzMKVG53kjHwfhvY+SlqORhTTNgGvhHBwE
zW2qt/hoFmpLiezaNc9O2O9g85u3yEKB9q0phn3sRPE5kz81QVkYcfp42ruv
7MQresOS+nQWonZQppwuO/G5dsrrdEE2MiluQK1HbMQhLuGgn1456LHuv4uP
vNiI51+77jx7noOzK1ZLxXfYiAAVM7YrETk4Wh974LgDG5Ecnnj8VF4Odrju
zNY/xUZ0t71UzVvOwczCg6kXxNmIHdsi1ms9+IFXz5+PuZPESoyWV42ce5WL
7U/f+X1pYiFYhPhUng7mYUORTKJFDQshNP66dXo+DytX4mpFylgI00MUjRv8
iHm3MsW9c1mIA/1/vF8pI0abNXwximEheFKHaGGeiA7b+WuXbrAQY4f7FC7y
ErhQ7i2mz8dCOAb632tPIHCKjesgOwcLYaXpvLD+G4Gjmi8sc1aYiRibSnd7
JLA3LTxh8yQzoa3/JFWikcDC0ByNf23MxHfaHZ6RJQIDHKYsouOYibjxBVvD
079wPY99/NQhZkJhfZmYA3s+XsyrDJDVYCbW3Jw53ro2H6OclG7o72UmhKUV
Egyl83Frx7xqohwzsWWeebvjvnzclfis0JqPmXgg4d6u4pCPh/TSe+qbmIj5
eF7jTfX5eDl4WSTVnomIuuN5eOJLASZqW//rtmQi3t11tmfLKcDR+ZJOPjMm
whOO/dxcWoBO1kEx9ieZiParMxBIFqDHns1KMspMhPlSwHth6UKUTnr5Vnp2
BelnLZ/RXhbilb0K7B3rV9BjX/wr0adF6MT+Pc5lzQoaJrFUlIYW4d0mneNC
LCu42GO58DihCJ/ctn1xbGAZLUw432mUF2HCt0jx7NRlVK64OW3DU4xDe0V3
vtZexmcOU1MNz4rxkiqbyakbS6j6WTUmL6oEr3G8/DdstYSfC37Am/QSdGne
GOZrvISZczLeD4pK0NcF+n6qL+Guw8LHgoZKMDbz7pUd7EvYkpD+OFi5FBmq
4/e4Qxex8+GrELXSUrTe1/25oGAB1fp+eyJLOdp93ndGO2sBLe/rxf0QKUcH
8SDWsoQFrFR9lVMuX443FrQuVgctYPzo3PTGU+XogfGUNvMFvKYcJJcVVo6v
dG57jS7MY/77zqUXByqw2ITPSHzPPAZWN3uG+VdiWaktc5jcPBqb7G7ZGFGJ
lfsxWVpyHn3tjzH9TK/Eekkn7s0s88jc7L55b08l9vS05O2s/YfqTZSru/ZV
4dylmG2HHf8hh7Qct9XvKlRwVV+59nEO9YTUZZxta5Do0lOgh8zhURs+y9l7
NXhGy9rY5PEcRpSfln4bWoMPBAK+wLU5lK8xe6dcW4NtH7tMBNXmUPuBaNol
6Vr0r/NOSa2YRd4fp0Loz2qxX6HEcmpiBkPSB/Y2udahR2BHgD1jBk1Zfwms
9a9DoZm/WZ0tM/g2QIm88KYONX+JCRTlzqDTLtVqhcw6fG3ikPPadwbDQ95H
vpyqw8M+/JR9EjOoOal7ItW5HqO6The6/TeNYV6BamEPGlCZVJ5v3DONPhfT
lv4GN2Dh8Nrdu+WnMQT3+BrFNGD/bM37foFpNGl9K65f2IAKQrq3TndOYbJO
ZY0QZyOmaR+WVbwzheznMuzrXzRi4dc93r2Jk5iZshT+KrkJB+6LaOiITSB7
oNFBt02tyOP59e9LnglsXsm9JKbeijtdj8X0Lo7jQ8V77NX6rehyzZPnbt84
esVZRXh4tSKHGaM1MWEcBfWn1AfaW3Hznm+3hQ6O46nO0zF/37ShVb/R1y7L
MYyjeZoHyXZgzmv5I4NnRrBQ8/MFmnM3cpkNWDNrjKDP0KHb6wK78YxM7AOJ
jSMYpvOu6eyXbpxI2ETo/v6D6/qG1Tlp3biNkD6Qeu8PSpsvxDLr9+DbYWGl
u59/40YD1gkB0V68DcxSfPNDmOct9O7fbC/msxEHtvQM4dnDNUsiHH0oWO5l
qlk4hN7p0urKwn2YaLT45sbzIeRzVBm0392H5OVZoSbZIdyd1u1aZN+Hhq9G
uCJODGJvNtvUQGsf7h5qm9oV3o9hRXmLRek0dB5T3Cbq049ff0mJ7yJomD17
/8KyQz+yPn9j9bSShv9xKBRXqvWjmM2kuySDhoab7r653MjAUs7wY09F6Hj7
goR6DC8DR9jjRXbeomOOzbVrTyZIPBwRavrYi47LV/Kjb7aRKHHiSXH1Yzr6
3nXgpcaRyKS5yVskko5v3+R0dh4ica97zNC9ilX7OtN76+7SsUM9omG7FInL
rcnpSxZ0LDULk2jZSuKhXpZBUoeOctddRS13k1gxmqCfvqojMmF2gV+LxE7e
hY36qTS0F2w3y7AjUYZy6sy+tzT062PT17xOoq1EzBPpezR0kDPVibxD4qj8
ick/ujQ0C3iePuhH4sqR94WPB/vQ+ZmeuFPsqh8n/87dqOnDatXs2ugkEv2N
tBTPZvZhiK3ezo8ZJApa/3691acPjYwtF4TzSTRygHL+K334zYHf+UEpie9u
vlyeMujD9L26n3KrSZT1PnCpYEMfenW8kXvZTqKd34v3Catxrd1kelWxl8SE
5/SaoJFeTGTfYhzIIFEl/KmaxY9Vlu5q/fKXRNePPY460b3YNphpbDVFYu4X
laidj3vxouV91a65Vb05HdxLZ3qxYvZdhSQzA5MTPu0vOdCLXokeF7azM1Ds
/fXLQTK96ORS8OYvFwMfPN3/zoy9FwmBTr5LfAxsnuUIPtHYg05H9+sGrmFg
QmvoeE94D4Z/t6FdFmKg1/edBs6XetDdZu25CWEGGobmp3Ap9SCv3a598qIM
3OJ+RjB8vhvdU5iYecQZOGc2fF2psBv/NO1UC5FgYKWGV03Rs27MHeozq5Bk
YKSU0C5Tk2685tk6GLeegc7Ln56PynRjUp73OQUpBh7t2T/6YLgLz/0Q2mqw
ypJE1UnRjC6Ur/tSKLHKo5GWSV88u/DqySvxj1bt8+9P81F1ulD9UKB24Or+
IVaPHRsFu9D29Vu+/avnX9aSqrRv70RFPUsHLzEGamxO3b4U04k9W45WXVzH
QEH2I0+DrnbiE3O9qFYKA0lG6/CWfZ247beGwbAgA7OLHY/nMHVibUuZdjA/
AwPimBL0yjswXAyHq7kZaO7/ipv+cpU/yH6KWL1v5cvyl+9c6MAr9eZdK0wM
5DieW8or14Fcpk7zYwsktivoy0eOtaOCoZD1jRkSk3lJvz057cjX1ufpMUbi
gz93BkoftqMKS1gqZZhE4ypenQsn29FP8YjtHjqJi89VOHx729DzouBv3kYS
a6+X2EoktGHz0RvPsYLEGH2zouRbbZjq/sloZjU/jws99GnhaENZm8W5/q8k
Sk+uI6/UtmKtM5kW/onEiYYELabQVly/86NOXehq/r6uZ9mm2IpvvkjVfn5I
oqOLndXPmRa8F+Kdemz1/VBN5n8ZEC0YKvj8mKUDiYNisvfvnm5Byf2loaN6
JKqG3VypcGtG4bvV3mfXkqv1md3cQqsZpa2Y8x8xkdh14V3eFF8zVnn4SUv/
paPPhl+eUpFNeIvYnv2knI4N0YKL14obMXBFPX7nal2IffjRjDWwEZPt9Dtf
2NDxro3ajzfnGpHjWsJfAz06ym61uEv8aUCunLObpzbQ8Ub817m1lAbMv70+
NvgHDXcLXHt4qLcemxbTT8VF03DcaYfAraR6fEaR3KTwmIZOGvGbGnXqMdPD
4uEdIxreronWC/Gow4CDO5I2kH2ouseyrfhYHQY1542/LO7DmbcbbGbX1aEw
o/znzc99eMcqzO1sai3url/Rs3fow8nh7cf2Vtag9sa/+moDveic8fliiF0N
OuZR/P8W9uKM5xbnWaYabNZfIyuw+q7nBDd8+L63GtvORBy6b9qLi6pC0wc/
VKLfr0UXb/8e5Hg4F6ntVIYWZxlKsTOd6Kd7OzOOrwzzP3fLyX3oRK51ExVc
caV4Q0wwwVu7E3nif8+Ud5Tgttm3PgVBHbimplv31JFivMJXrZsj0Y5ikkVz
JmIFyBdD5zeba8Yzdpui6j2+I9deJ5mJvzX45OYt/+Bv2ai2bvrdZo4a/OlR
cN1wNAvDfyalDElU4+aX1pr15pm4WHFY3ZBaiRMY01F3KB1D57e2p7uXorTK
0R3RaxPwm+b01NRPAsfevrMZf2eFAvsNZ8skXNGD5VWRttoxCHgeOqllYgE7
Q61LhFWvwwWXw/yNaj5wWqU11/c/H7jo7/Dl+cFQuGl3ZajwVQgIqytrp6sm
ARPTtxXrvDhQY/cU2Pg0D0oq256onM6G5g+PqbuCq8Hetb3EbPt3OCxPPvML
rAGuzR1sPqw50OpTEvVauxaOu3d6Nab/gNjX6q3B1Dqo3NbjdFsYoeh4DtV4
WwPYazkldQznQ3pAT5l7WTOovZuo+HumAGZI++lHai3A9ddpmLWgAFiFw/Zd
im2B+NBbcjveF0KrWo51pFcrDI87R3mcKIZefhXnFzLt4Bh557VUYhl0V0uE
j8p1gcbMbLqSWDmwr2/+y/KwC/h0XeuP+JRDovmPzUWdXZA067rm2vkKqGNt
XDoZ0A2jencf5/FVwX7u2Eijjh7I+zgfV+9aBTYGRuu7RHrh+fzd4n6yatVP
QTvrg72wK9addc3PaiCvFMxeftIL2V55eV9Va0G1ZlrefH0fRMYvV313rIWE
O+kPFaEP/Bs1uwqiayGE+eDsKcs+OKuACy0CdWBalREQHNMH/5pQjWmgDsry
L62XlKEBjYnpKI9UPTwc0vQJOUiD8u1UE+HT9XBX/oCMgykNQu8Tt+WxHoaq
xIbXB9NAXfFXmv6bBhDe1NhR8o8GexubQ/LKGkBymOejtyAddrv/ubtjsQHS
/h03SNpKh61lolpclo0gV30t39aADhTba6ufxCbwq9mr6hhJBwE+nyzFC01Q
LZO4oyuNDjzp796/f9EE8yeWncsK6cDEXGR9Z6oJKofCxcUG6PAnTHJqZ14z
dLPT/b5sIWFAS6k1bKwZTFOHfgrvIYE2rJ3Ls6kFBt3MJ5kPkdCm5uTT79cC
8j+tFxzPk9DY42dvlNMC8/sEt4zYk1DrG66b/6cF+HZzLk47k1DcWCocYdAK
Tt+XPGOfkvDLvXuO16cVONQmXumHkJArO9XpltkKNwaI3f6RJKTd2PDJWLIN
ZJNHyI/pJCSJ7n1ccLINQqNvuwbkkvA57/hVJe82uLyr1ZejiIQPfC57+Rlt
kBJ7RjyrkYTQ9Kfi7qLtwH8zTHasg4QQ06ilwWPtUHa0MIWgkRDEnNV3xqMd
osT0uBSGSAj4XFlUmNwOu6I0rin+JcHvFC1eua8deK5PyFVOkfBgZvZZJKUD
BDPWuHPOk+B6eNMZD9cO+Dl6je0cKwNu/VZTH07ogFzf5aKbnAy4Fqwnfbar
A85kG+7bwcsAh/02LMVrOsH16cXwxwIMsO1161c51AnMmm81nq5lgIXfi/Io
5054q951VlmYAed3fkpeE9cJP4fO7PVexwCTppxgz7ZO+G1qIewixgBDj1qX
37xdsFzguE9EggEnN/WbntPsgujG0e6Lkgw4Wr6gWXKjCx50UI8brWeA1s21
m/bGdAHTj2dZM6usKSbHGdPUBXkJOdY6UgzYjxq/Bbm6IbbA4Mn/eI+dYY2X
ejfEnL5qO7e6fje/ffofx25Qn4lRNFvl7Rmeb0w/dIP99Wnxm6vnbTV76V5a
1w1hR7LND6zqkWWJN1dl6wFOMX/lH6t6peLztD6q9sCW5D2F46v+iOk3ygld
7gHHn6mHe1f9pcwO8Xq/74FFS06anxADBCJW/o5U9cB+Ha3SoTUM8InmGVZk
6gUWT4eNnPwMYHER6bQR7wXdmSsifdwMMLVIqM/e0wu82z5k7OBgQNpxKOPT
74Xt1c+mt7MwwGrD5cwM314QLk0WP/GPhBzu5USu6F5IuOfZcHU1vkJTwTHn
f/ZCe4Js57HV+OeX5gayTfWC/gsRaxWSBIl0A7+za/rA+fX9cK1uEpzC+z0T
Ffrg+JrhCKFWEmSdBK8YrdaFHQY1RyfKSXgoaXPkY3UfFL93T+lMIqGT/d+B
uaE+qI5NSOOMJWHP2DNlXXYazF3KyV8IJ4EszNowdYAGb796DWs9I+HwNd55
rXgaKHyXD719mQS2X2nJ9Id0oN0XhfPiJJz/ovNp3wc6HMlksY8WICHjdef7
pzl0+PzQw7aAlQQbB47HKuN0OP1fUNW7EToUUUytH14kYe7uQaF0pIOvHbPY
pv0MmBsR+WJ5kQ6cfPr3rUb7YZ5PtlH3KQ3OypkSqtwDoCUZntLgSYOEQzYr
PJsH4PfJ0gK9GzTQc3P1TD83ADMqe3M3GdMgpD/Sja1oAOSEfONNpGmw9df4
zdj3g7BtRF7U+GsfHHF5aTV8dBgKdQ9ohFf3wsPeZi2nmBFIoJ40r5Lrhu7v
J6665o7Ab1L0RobAap69JEK8mkbgq+4sc/x0F4wdSRh6wjkKXF3f3H4UdMHF
L54vYq6Mgq6Ei8xTiy5Qd9nc0ajyFx6m3FReDOuEf+z7v0tajYHQl7lIadkO
iHWarIq4NgY8SbHnWXk7wKgnibbRfQzqw1ba/k22Q0q2LJ/8qzGoVd1gsb64
Heyu8JnvKR6DxUyO8/uvtENjbQ/bSYVxKIytLujOXq0z7331vSbGoVJ82ZRi
1QoVFN+BNUwTUH61JtbnRCv0P33kFcU/AYRX/Rzv3lZY7+GTWCg/Ad+ZAxPO
c7WC//kHXLzmE1AUm8jGkdICFlJexJuKCaCNKv51Zm0BwQ+3d6d+nASLbQ+F
AnOaYLvo7ZJDaZNQzSrCnxXbBNovnC824iRo0Z5SJoObwOPerYDZ9knYYcG+
JuFKEwya3xw8uHYKen/FgZB0ExAyVyPLPafAwzSzLc+3Ea5H2wiSZ6Zh8wfd
FolLDfDc7V3Yc+tp4Eo6GPbnTAMk61fL778xDYLOG1aqtRtgdHnff88fT0Ph
1UWboq0N4GjG66SWOw2HR65L3BmoBwfhtIaAjTOQkTtn3HelHux8V0L2/pkB
6WQe5svedeB7Yc+m3rkZMOWWG1dyqoPYPZe/PmGfBdftOz5y29QBg1Zf0iM9
C4QUvyhDpw5sIHbuscEsJF/wf3ZcsA6s5nRNuzNnwbbzQkZ+TC1cdAiV8rs/
B3o/eq4wJ9TAQht39fizOciiiGv7B9XA22NuXudD5+Dkx4J/cm41UCd/tkcp
fQ5iMx49SD1aA4cHRKI6yTl4pqqlNDxYDdtsgjYrH/0HgTxhC+2K1TB1wX97
l8A8+K1zW2Ivq4TAqtkOHcl52HNXMOp2eiUoHrwUkCY3D2GvXv6eD68Eu/Xa
I37UeVD9ek9Y+1YltLWzflV2mgd/rWzhTulKyDO5p+zfNA/CCiICE24V8NjA
Zb9K2AKIX6y9txnKIbhSwTExfgFMeBxHPRXKIUynJ2JL1gL05Di6j4iUQ8rB
o2xi9QvQlHHxocBIGbRuk6hZ5FwE7yYVY+OwMpBnybMpvrUITQWi37uXS6E4
jT3w3IklyJ+p+rSjoQRqFXPy688uwZSC32HRXyXQ/vna9Am7JXA9Nlwv/LUE
RiNaTDXvr84HVFgcfVoC657Gb9mUtQRxSmqZzw+XgK31yR9/ZJeBvKxv4JNT
DGzCr/vvzS/Dj5M1193Si0Bo1EtAiHMF0q74BcV+LIKNpfaqHykrkNw4Udf3
ugg0PTR8S3esstP01QeuReBG0resNV+Bj6Je+g6aRTCaoWwbXbACql8ejBZX
FsIfhcGbVtpMVCunNWNHJwugpeLRmM8aZqrTZ1H/Mzb58Eoz/IjxOmbqg0/f
JkNN8sEwNSN0ixQzNdl6ofX38XyoDqEfLlZgptoIsjWmKeVDseV/7zi1mak3
7ZSGGlZ+Qebs4n9PPJipvRlOP4wjfkHIJueXL4aYqf5NSeen6QQYu1uphhaw
UIdFLpMhUggh4cIcs2Us1KMveCbaeBCasbjpdC0LlfcsfaviXB6cYdt+m7+L
hZpwUJZgbciDs88m071nVu2zZ8uvP84D0w8+Spe2sVKLzy2c2/PvJ1gUxO7Y
84KVOshheGmRnguOvL9lq03ZqAGnX/XtpufAb7ccNl5LNqqssFicbmMOOAw+
7te5xEZ1dAkydC7KgUtF8gm/brFRazxYtw/E5YDVPTulbwFs1H3y1sHnrubA
uck+CMtjo2a+zhixm/8O2h2t5x1k2amDajLQuP47bPhSHMIxzE5lr/+1HOud
BUYfsr+Xj7FTa7KNN56/lQVPXiZ0Pp9lp+aYGe1Yb5cFU+7PZUXZOagCgwlV
uSeyoFz3TLKcDAc1em3QipdoFriMMoqOnuGghv3adWEpJROqlNinn+RzUP8M
7E4P+f0N3LO1Tq95z0nlYzmrzuuZAcrna8fMozipwY+u8NCcMmB45fzzlDhO
qhDfIxXCPgNMdVzKDDI4qQmRF24HG2WAevNneFXFSWV6Yfbv2Y4MmJvk3yHO
xEX15OPf1tGVDi67Wtk22XJR6SxinZFH0uFGrGOm6i5u6tL1202P5NOgu0by
tYAqN9V9RhVObEiDk//Kb/VrcFN/bJXyFV2XBgq625RCjnNTPy73BhaypgE5
zvgybctNpSlk0673pILJQfOojDBuqqoDTyP721TQbDQIUObhoeaW6hmwCqQC
H8s+q50MHipq5Nkt86bAkatGrxVe8lFzlzcoK4Yngth3qetHNgtQS+7lBmS2
xkOwk3/Q7pY1VKVB1su7j8SBoe8pxfBMQapp/dshH6VPoGDmY/zRcy31iP1P
EeJyDDT3c0e/NBaivsl1uJyQHQXVVoz/hDZQqIeTOA12GkdCH1vc3GtZCvW7
W99201ORMBVr/1V8K4X6856Y1ONjkSD++/f6jYoUqnPmyv6xg5Fgc2tidtcB
ClVVuGgjfWskzD9cSTppQqHeeOL1IX3iA2z9JC7x+AWFOib66foc9cPqP6yj
lu8lhfqt0SqOX/UD6A6F+QWGUKgWSoX+8ts/wE1Fmek34RRqf9SU2nWRD5D7
bWtt7BcKdf0uEzoMR4BhsYpvYQmFGkgX4P/9KgJs7ac1jlZQqN7RAiLnnkSA
K0/WZEU1hXrik/KTynsREK6nbtnQtKrnz96kAocIGGymatDoFKqVz/z1CWoE
zLuyTNoOrHJyy92nqhHAL1kYPzRMofrfLGratiMClM11RMfHV+/n/IOrLqIR
cISZu9p5mkL9VLg7ZjN/BJyNKfeZm1td/1+yRCtLBDgcCTjgsUih+rTfrA2c
C4f/7z9T/7//DP8Hnabo1w==
        "]]},
      Annotation[#, "Charting`Private`Tag$104437#1"]& ]}, {}}},
  PlotPoints -> 31,
  MaxRecursion -> 8,
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Arrowheads[{0, 0.015}],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{
    FormBox["\"z-vt\"", TraditionalForm], 
    FormBox["\"Pressure\"", TraditionalForm]},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{600.671875, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.860865069282658*^9, 3.860865101350581*^9}, {
  3.860865197990851*^9, 3.860865333982638*^9}, {3.86086542116127*^9, 
  3.860865436958164*^9}, {3.8608655072670813`*^9, 3.860865520582632*^9}, {
  3.86086558019337*^9, 3.860865683055769*^9}, {3.8608661264790077`*^9, 
  3.860866130927867*^9}, {3.8608662415233803`*^9, 3.8608662476426992`*^9}, {
  3.860866393280019*^9, 3.86086641979148*^9}, {3.860866766392568*^9, 
  3.860866794325165*^9}},
 CellLabel->
  "Out[1162]=",ExpressionUUID->"8ac01532-9669-4ee3-8605-0f3ef1e172d0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"arrowheadNames", "=", 
   RowBox[{"GraphElementData", "[", "\"\<Edge\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.860866558332191*^9, 3.860866558336071*^9}},
 CellLabel->
  "In[1087]:=",ExpressionUUID->"fca5edc4-b343-49b7-9aff-8fe0dad04e0d"]
},
WindowSize->{Full, Full},
WindowMargins->{{Automatic, 70}, {-13, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.1 for Mac OS X ARM (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"fa63b81e-e2bc-4e26-85b2-f62788f62c62"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2208, 53, 52, "Input",ExpressionUUID->"f6cdf50a-ba43-4836-bd0a-75f14c38c845"],
Cell[CellGroupData[{
Cell[2791, 77, 8669, 189, 220, "Input",ExpressionUUID->"f478f510-d79a-4e4e-92a9-76a9232c3eac"],
Cell[11463, 268, 27546, 555, 359, "Output",ExpressionUUID->"9a0c4768-db36-4876-81f0-f3185be3492d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39046, 828, 539, 13, 52, "Input",ExpressionUUID->"2a6a7060-f93d-44bd-b8e6-a9e102cfe5c7"],
Cell[39588, 843, 512, 11, 28, "Message",ExpressionUUID->"3d12eb8b-da8d-41d2-92ce-5efbc1ed9d8c"],
Cell[40103, 856, 445, 10, 28, "Message",ExpressionUUID->"5adfa540-84e1-4b52-8989-2e44020f2127"],
Cell[40551, 868, 250, 4, 34, "Output",ExpressionUUID->"03d51ea6-1429-4ef9-81fa-5714eb6deaaf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40838, 877, 252, 6, 30, "Input",ExpressionUUID->"448c50a8-7121-4b7a-aa25-a314ad20ee71"],
Cell[41093, 885, 440, 10, 28, "Message",ExpressionUUID->"0bf74eef-f568-4bff-8d6b-8fd83fd63bcf"],
Cell[41536, 897, 155, 2, 34, "Output",ExpressionUUID->"73a496b6-5f06-4af8-9ff9-cc11a3a9a90e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41728, 904, 252, 6, 30, "Input",ExpressionUUID->"a11238a3-cfd2-48d7-ba33-5d0569a03550"],
Cell[41983, 912, 443, 10, 28, "Message",ExpressionUUID->"ef2439fb-8d96-473d-b6ec-16368909851b"],
Cell[42429, 924, 157, 2, 34, "Output",ExpressionUUID->"5b94b9fd-5358-4fa6-9bb1-df2616e901af"]
}, Open  ]],
Cell[42601, 929, 147, 3, 52, "Input",ExpressionUUID->"ec7cd9b3-02f8-4fb6-b21f-08e79268157f"],
Cell[CellGroupData[{
Cell[42773, 936, 370, 7, 30, "Input",ExpressionUUID->"5ccefb6b-c8c4-454b-9307-557c32031d1e"],
Cell[43146, 945, 22624, 410, 135, "Output",ExpressionUUID->"8ac52c93-8eac-4b67-b7c6-cc5ef3a06a37"]
}, Open  ]],
Cell[65785, 1358, 2639, 69, 94, "Input",ExpressionUUID->"c32004ba-2d7b-4450-a6bb-44de52866eb6"],
Cell[CellGroupData[{
Cell[68449, 1431, 995, 24, 52, "Input",ExpressionUUID->"91cf6fc6-d548-4613-b7aa-df7b7b7cd967"],
Cell[69447, 1457, 284, 5, 37, "Output",ExpressionUUID->"7aaf6f1d-3ca7-4d08-a099-08c72f451235"]
}, Open  ]],
Cell[69746, 1465, 479, 10, 30, "Input",ExpressionUUID->"222ec687-b0f3-4e56-b950-2864b9bb8b2d"],
Cell[70228, 1477, 572, 17, 52, "Input",ExpressionUUID->"22674070-853f-40b7-9f2d-4d8cb0997229"],
Cell[CellGroupData[{
Cell[70825, 1498, 4177, 95, 262, "Input",ExpressionUUID->"5a57d927-1df3-40f8-a5c2-c49e02c030e9"],
Cell[75005, 1595, 30166, 521, 389, "Output",ExpressionUUID->"8ac01532-9669-4ee3-8605-0f3ef1e172d0"]
}, Open  ]],
Cell[105186, 2119, 285, 6, 30, "Input",ExpressionUUID->"fca5edc4-b343-49b7-9aff-8fe0dad04e0d"]
}
]
*)

